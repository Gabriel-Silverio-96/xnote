{"version":3,"sources":["common/hooks/useLocalStorage/index.ts","common/context/XnoteContext.tsx","components/Container/Footer/styled.ts","components/Container/Footer/FooterView.tsx","components/Container/Footer/Footer.tsx","components/Container/styled.ts","components/Container/index.tsx","pages/xnote/common/util/createNote/index.ts","pages/xnote/DialogCreate/styled.ts","pages/xnote/DialogCreate/DialogCreateView.tsx","pages/xnote/DialogCreate/DialogCreate.tsx","assets/background-modal.png","assets/icon/icon-github.svg","assets/logo-xnote.svg","pages/xnote/DialogAbout/styled.ts","pages/xnote/DialogAbout/DialogAboutView.tsx","pages/xnote/DialogAbout/DialogAbout.tsx","pages/xnote/DialogEdit/styled.ts","pages/xnote/DialogEdit/DialogEditView.tsx","pages/xnote/DialogEdit/DialogEdit.tsx","components/TextArea/styled.ts","components/TextArea/TextAreaView.tsx","components/TextArea/TextArea.tsx","pages/xnote/Tabs/styled.ts","pages/xnote/Tabs/TabsView.tsx","pages/xnote/Tabs/Tabs.tsx","pages/xnote/xnoteView.tsx","pages/xnote/xnote.tsx","router.tsx","index.tsx"],"names":["useLocalStorage","key","initialState","useState","storage","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","XnoteContext","createContext","XnoteProvider","children","noteContent","setNoteContent","isOpenDialogCreate","setIsOpenDialogCreate","isOpenDialogEdit","setIsOpenDialogEdit","isOpenDialogAbout","setIsOpenDialogAbout","id_note","title","noteEditDefaultValue","setNoteEditDefaultValue","Provider","value","Footer","styled","footer","NavFooter","ul","FooterView","onDeleteAllNote","amountNote","onDialogAbout","onClick","disabled","data-testid","useContext","setStorage","length","ReactDOM","unstable_batchedUpdates","toast","prevState","Main","main","Container","createNote","uuidv4","content","Dialog","div","DialogHeader","DialogContent","ButtonClose","button","DialogBody","DialogFooter","ButtonPrimary","ButtonSecundary","Input","input","DialogCreateView","open","register","errors","handleSubmit","onSubmit","onClose","isErrors","type","role","id","required","placeholder","form","DialogCreate","useForm","formState","reset","data","notes","props","backgroundModal","LogoFooter","DialogAboutView","className","src","Logo","alt","href","target","rel","IconGithub","DialogAbout","ButtonDelete","DialogEditView","deleteThisNote","defaultValue","DialogEdit","filterIdNote","note","filter","indexNote","findIndex","splice","TextAreaStyled","textarea","TextAreaView","dataId","onChange","rest","data-id","autoFocus","TextArea","TabListStyled","TabList","TabStyled","Tab","ButtonPlus","TabsView","openDialogCreate","openDialogEdit","handleContent","onSelect","lastSelectedTab","defaultIndex","map","onDoubleClick","Tabs","setLastSelectedTab","useCallback","e","dataset","callBackNote","setTimeout","index","memo","xnoteView","Xnote","Router","exact","path","component","to","render","StrictMode","theme","autoClose","document","getElementById"],"mappings":"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","file":"static/js/main.e9eda854.chunk.js","sourcesContent":["import React, { SetStateAction, useEffect, useState } from \"react\"\r\n\r\nconst useLocalStorage = <T>(key: string, initialState: any): [T, React.Dispatch<SetStateAction<T>>] => {\r\n    const [state, setState] = useState(() => {\r\n        const storage = localStorage.getItem(key);\r\n        if (storage) {\r\n            return JSON.parse(storage);\r\n        } else {\r\n            return JSON.parse(initialState!);\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n\r\n    return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;","import useLocalStorage from \"common/hooks/useLocalStorage\";\r\nimport { INoteFields } from \"pages/xnote/common/types/dialog/index\";\r\nimport React, { createContext, useState } from \"react\";\r\nimport { IXnoteContext } from \"./types/types.component\";\r\n\r\nexport const XnoteContext = createContext({} as IXnoteContext);\r\n\r\nexport const XnoteProvider: React.FC = ({ children }) => {\r\n    const [storage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\r\n    const [noteContent, setNoteContent] = useState<INoteFields[]>(storage);\r\n    \r\n    const [isOpenDialogCreate, setIsOpenDialogCreate] = useState<boolean>(false);\r\n    const [isOpenDialogEdit, setIsOpenDialogEdit] = useState<boolean>(false);\r\n    const [isOpenDialogAbout, setIsOpenDialogAbout] = useState<boolean>(false);\r\n    const [noteEditDefaultValue, setNoteEditDefaultValue] = useState<Omit<INoteFields, \"content\">>({\r\n        id_note: \"\",\r\n        title: \"\"\r\n    });\r\n\r\n    return (\r\n        <XnoteContext.Provider value=\r\n            {\r\n                {\r\n                    noteContent,\r\n                    setNoteContent,\r\n\r\n                    isOpenDialogCreate, \r\n                    setIsOpenDialogCreate,\r\n\r\n                    isOpenDialogEdit, \r\n                    setIsOpenDialogEdit,\r\n\r\n                    isOpenDialogAbout, \r\n                    setIsOpenDialogAbout,\r\n\r\n                    noteEditDefaultValue, \r\n                    setNoteEditDefaultValue\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </XnoteContext.Provider>\r\n    )\r\n};","import styled from 'styled-components';\r\n\r\nexport const Footer = styled.footer`\r\n    width: -webkit-fill-available;\r\n    padding: 0.5rem 1rem 0;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    align-content: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    \r\n    border: 0.1rem solid #121212;\r\n    border-left: 0;\r\n    border-bottom: 0;\r\n    border-right: 0;\r\n    text-align: right;\r\n    background: #000000;\r\n    width: -moz-available;\r\n    \r\n    div {\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\nexport const NavFooter = styled.ul`\r\n    list-style: none;\r\n    font-size: 0.8rem;\r\n    display: flex;\r\n\r\n    li{\r\n        cursor: pointer;\r\n        &:first-child {\r\n            margin-right: 1rem;\r\n        }\r\n\r\n        button {\r\n            background-color: black;\r\n            cursor: pointer;\r\n            border: 0;\r\n            color: #cfcfcf;\r\n\r\n            &:disabled {\r\n                color: #282525;\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport { Footer, NavFooter } from \"./styled\";\r\nimport { IFooter } from \"./types/types.component\";\r\n\r\nconst FooterView: React.FC<IFooter> = ({ onDeleteAllNote, amountNote, onDialogAbout }) => {\r\n    return (\r\n        <Footer>\r\n            <div>\r\n                <NavFooter>\r\n                    <li>\r\n                        <button \r\n                            onClick={onDeleteAllNote} \r\n                            disabled={amountNote > 1 ? false : true}\r\n                            data-testid=\"delete-all\"\r\n                        >\r\n                            Detele all\r\n                        </button>\r\n                    </li>\r\n                </NavFooter>\r\n            </div>\r\n            <div>\r\n                <NavFooter>\r\n                    <li>\r\n                        <button onClick={onDialogAbout}>About</button>\r\n                    </li>\r\n                </NavFooter>\r\n            </div>\r\n        </Footer>\r\n    )\r\n};\r\n\r\nexport default FooterView;","import { XnoteContext } from \"common/context/XnoteContext\";\r\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\r\nimport React, { useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport FooterView from \"./FooterView\";\r\n\r\nconst Footer: React.FC = () => {\r\n    const { noteContent, setNoteContent, setIsOpenDialogAbout } = useContext(XnoteContext);\r\n    const [, setStorage] = useLocalStorage(\"xnote\", \"[]\");\r\n    const amountNote = noteContent.length;\r\n    \r\n    const onDeleteAllNote = () => {\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            setNoteContent([]);\r\n            setStorage([]);\r\n        });\r\n        toast(\"Delete all notes\");\r\n    };\r\n\r\n    const onDialogAbout = () => setIsOpenDialogAbout(prevState => !prevState);\r\n\r\n    return <FooterView {...{ onDeleteAllNote, amountNote, onDialogAbout }} />\r\n}\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\nexport const Main = styled.main`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    padding: 1.5rem;\r\n`","import Footer from \"./Footer\";\r\nimport React from \"react\";\r\nimport { Main } from \"./styled\";\r\n\r\nconst Container: React.FC = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Main>\r\n                {children}\r\n            </Main>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Container;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst createNote = (title: string) => {\r\n    return {\r\n        id_note: uuidv4(),\r\n        title,\r\n        content: \"\"\r\n    };\r\n};\r\n\r\nexport default createNote;","import styled from \"styled-components\";\r\n\r\nexport const Dialog = styled.div`\r\n    display: flex;\r\n    position: fixed; \r\n    top: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;    \r\n    background-color: rgba(0,0,0,0.4); \r\n    overflow: auto;   \r\n`\r\n\r\nexport const DialogHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    h3 {\r\n        color: #FFFFFF;\r\n    }\r\n`\r\n\r\nexport const DialogContent = styled.div`    \r\n    background-color: #262626;    \r\n    border-radius: 0.5em;\r\n    width: 20rem;\r\n    min-height: 5rem;\r\n    padding: 2em;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    gap: 2rem;\r\n`\r\n\r\nexport const ButtonClose = styled.button`\r\n    font-size: 1rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: black;     \r\n    padding: 0.1rem 0.4rem;\r\n    border-radius: 0.2rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: #FFFFFF;\r\n\r\n    p {\r\n        transform: rotate(45deg);\r\n    }\r\n`\r\n\r\nexport const DialogBody = styled.div`\r\n    form > span {\r\n        font-size: 0.8rem;\r\n        color: red;\r\n        font-weight: 100;\r\n    }\r\n`\r\n\r\nexport const DialogFooter = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const ButtonPrimary = styled.button`\r\n    background-color: #000000;\r\n    color: #FFFFFF;\r\n    padding: 0.5rem 0.8rem;\r\n    border-radius: 0.4rem;\r\n    border: 0;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const ButtonSecundary = styled(ButtonPrimary)`\r\n    background-color: transparent;\r\n    border: 0.02rem solid #959595;\r\n    color: #FFFFFF;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    padding: 0.5rem;\r\n    height: 1.3rem;\r\n    border-radius: 0.5rem !important;\r\n    background-color: #000000;\r\n    border: 0;\r\n    color: #FFFFFF;\r\n    width: -webkit-fill-available;\r\n`","import React from \"react\";\r\nimport { IDialogCreate } from \"../common/types/dialog\";\r\nimport { ButtonClose, ButtonPrimary, ButtonSecundary, Dialog, DialogBody, DialogContent, DialogFooter, DialogHeader, Input } from \"./styled\";\r\n\r\nconst DialogCreateView: React.FC<IDialogCreate> = ({ open, register, errors, handleSubmit, onSubmit, onClose }) => {\r\n    const isErrors = errors.title?.type === \"required\";\r\n    return (\r\n        <>\r\n            {open && (\r\n                <Dialog role=\"dialog\">\r\n                    <DialogContent>\r\n                        <DialogHeader>\r\n                            <h3>Create new note</h3>\r\n                            <ButtonClose onClick={onClose}>\r\n                                <p>+</p>\r\n                            </ButtonClose>\r\n                        </DialogHeader>\r\n                        <DialogBody>\r\n                            <form onSubmit={handleSubmit(onSubmit)} id=\"createNote\">\r\n                                <Input\r\n                                    {\r\n                                    ...register(\"title\",\r\n                                        { required: true })\r\n                                    }\r\n                                    placeholder=\"Tab name\"\r\n                                    data-testid=\"create-title\"\r\n                                />\r\n                                {isErrors && <span>Tab name is required</span>}\r\n                            </form>\r\n                        </DialogBody>\r\n\r\n                        <DialogFooter>\r\n                            <ButtonSecundary onClick={onClose}>Close</ButtonSecundary>\r\n                            <ButtonPrimary form=\"createNote\" data-testid=\"dialog-create-save\">Save</ButtonPrimary>\r\n                        </DialogFooter>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DialogCreateView;","import { XnoteContext } from \"common/context/XnoteContext\";\r\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\r\nimport React, { useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from 'react-toastify';\r\nimport { IDialogTitle, INoteFields } from \"../common/types/dialog\";\r\nimport createNote from \"../common/util/createNote\";\r\nimport DialogCreateView from \"./DialogCreateView\";\r\n\r\nconst DialogCreate: React.FC = () => {\r\n    const { isOpenDialogCreate, setIsOpenDialogCreate, setNoteContent } = useContext(XnoteContext);\r\n    const { register, formState: { errors }, handleSubmit, reset } = useForm<INoteFields>();\r\n    const storage = JSON.parse(localStorage.getItem(\"xnote\")!);\r\n    const [, setStorage] = useLocalStorage<string | any[]>(\"xnote\", \"[]\");\r\n\r\n    const onClose = () => {\r\n        setIsOpenDialogCreate(prevState => !prevState);\r\n        reset();\r\n    };\r\n\r\n    const onSubmit = (data: IDialogTitle) => {\r\n        const { title } = data;                \r\n        const notes = [...storage, createNote(title)];\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            setStorage(notes);\r\n            setNoteContent(notes);\r\n        })\r\n        onClose();\r\n        toast(\"Create tab\");\r\n    };\r\n    \r\n    return (\r\n        <DialogCreateView\r\n            {...{ register, errors, handleSubmit, onSubmit, onClose }}\r\n            open={isOpenDialogCreate}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DialogCreate;","export default __webpack_public_path__ + \"static/media/background-modal.026006b8.png\";","export default __webpack_public_path__ + \"static/media/icon-github.f69e45e4.svg\";","export default __webpack_public_path__ + \"static/media/logo-xnote.6c00d0c4.svg\";","import styled from \"styled-components\";\r\nimport { IDialogContentStyled } from \"./types/types.styled\";\r\n\r\nexport const Dialog = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;  \r\n  background-color: rgba(0,0,0,0.4);\r\n`\r\n\r\nexport const DialogContent = styled.div<IDialogContentStyled>`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 2rem 3rem;\r\n    max-width: 31.25rem;\r\n    margin: auto;\r\n    background-color: #262626;\r\n    border-radius: 1.25rem;\r\n    background-image: url(${props => props.backgroundModal});\r\n    background-repeat: no-repeat;\r\n\r\n    h1 {\r\n        color: white;\r\n        font-size: 2.5rem;\r\n        margin-top: 3rem;\r\n        margin-bottom: 3rem;\r\n    }\r\n\r\n    ul {\r\n        list-style: decimal;\r\n        padding-left: 1rem;        \r\n\r\n        li {\r\n            margin-bottom: 1rem;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        width: 15.625rem;\r\n    }\r\n`\r\n\r\nexport const DialogHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .logo {\r\n        img {\r\n            width: 4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const ButtonClose = styled.button`\r\n    font-size: 1.5rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: black;     \r\n    padding: 0.2rem 0.8rem;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: white;\r\n\r\n    p {\r\n        transform: rotate(45deg);\r\n    }\r\n`\r\n\r\nexport const DialogFooter = styled.div`\r\n    margin-top: 5rem;\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        p {\r\n            margin-left: 0.5rem;\r\n            color: white;\r\n            text-decoration: none;\r\n        }\r\n    }\r\n`\r\n\r\nexport const LogoFooter = styled.div`\r\n    img {\r\n        width: 1.5rem;\r\n        background-color: white;\r\n        padding: 0.5rem;\r\n        border-radius: 50%;\r\n    }\r\n`","import backgroundModal from \"assets/background-modal.png\";\r\nimport IconGithub from 'assets/icon/icon-github.svg';\r\nimport Logo from 'assets/logo-xnote.svg';\r\nimport React from \"react\";\r\nimport { ButtonClose, LogoFooter, Dialog, DialogContent, DialogFooter, DialogHeader } from \"./styled\";\r\nimport { IDialogAbout } from \"./types/types.component\";\r\n\r\nconst DialogAboutView: React.FC<IDialogAbout> = ({ onClose, open }) => {\r\n    return (\r\n        <>\r\n            {open && (\r\n                <Dialog>\r\n                    <DialogContent backgroundModal={backgroundModal}>\r\n                        <DialogHeader>\r\n                            <div className=\"logo\">\r\n                                <img src={Logo} alt=\"Logo Xnote\" />\r\n                            </div>\r\n                            <div>\r\n                                <ButtonClose onClick={onClose}>\r\n                                    <p>+</p>\r\n                                </ButtonClose>\r\n                            </div>\r\n                        </DialogHeader>\r\n                        <h1>\r\n                            Create new notes is very simple\r\n                        </h1>\r\n                        <ul>\r\n                            <li>Click in button plus, to create new note</li>\r\n                            <li>To edit name tab or delete note, double click in tab</li>\r\n                        </ul>\r\n                        <DialogFooter>\r\n                            <a href=\"https://github.com/Gabriel-Silverio-96/xnote\" target=\"_blank\" rel=\"noreferrer\">\r\n                                <LogoFooter>\r\n                                    <img src={IconGithub} alt=\"Icon Github\" />\r\n                                </LogoFooter>\r\n                                <p>Respository</p>\r\n                            </a>\r\n                        </DialogFooter>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogAboutView;","import { XnoteContext } from \"common/context/XnoteContext\";\r\nimport React, { useContext } from \"react\";\r\nimport DialogAboutView from \"./DialogAboutView\";\r\n\r\nconst DialogAbout: React.FC = () => {\r\n    const { isOpenDialogAbout, setIsOpenDialogAbout } = useContext(XnoteContext)\r\n    const onClose = () => setIsOpenDialogAbout(prevState => !prevState);\r\n    return <DialogAboutView {... { onClose }} open={isOpenDialogAbout} />\r\n}\r\n\r\nexport default DialogAbout;","import styled from \"styled-components\";\r\n\r\nexport const Dialog = styled.div`\r\n    display: flex;\r\n    position: fixed; \r\n    top: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;    \r\n    background-color: rgba(0,0,0,0.4); \r\n    overflow: auto;   \r\n`\r\n\r\nexport const DialogHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    h3 {\r\n        color: #FFFFFF;\r\n    }\r\n`\r\n\r\nexport const DialogContent = styled.div`    \r\n    background-color: #262626;    \r\n    border-radius: 0.5em;\r\n    width: 20rem;\r\n    min-height: 5rem;\r\n    padding: 2em;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    gap: 2rem;\r\n`\r\n\r\nexport const ButtonClose = styled.button`\r\n    font-size: 1rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: black;     \r\n    padding: 0.1rem 0.4rem;\r\n    border-radius: 0.2rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: #FFFFFF;\r\n\r\n    p {\r\n        transform: rotate(45deg);\r\n    }\r\n`\r\n\r\nexport const DialogBody = styled.div`\r\n    form > span {\r\n        font-size: 0.8rem;\r\n        color: red;\r\n        font-weight: 100;\r\n    }\r\n`\r\n\r\nexport const DialogFooter = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const ButtonPrimary = styled.button`\r\n    background-color: #000000;\r\n    color: #FFFFFF;\r\n    padding: 0.5rem 0.8rem;\r\n    border-radius: 0.4rem;\r\n    border: 0;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const ButtonDelete = styled(ButtonPrimary)`\r\n    background-color: #cd0909;\r\n    border: 0;\r\n    color: #FFFFFF;\r\n`\r\n\r\nexport const Input = styled.input`\r\n    padding: 0.5rem;\r\n    height: 1.3rem;\r\n    border-radius: 0.5rem !important;\r\n    background-color: #000000;\r\n    border: 0;\r\n    color: #FFFFFF;\r\n    width: -webkit-fill-available;\r\n`","import React from \"react\";\r\nimport { IDialogEdit } from \"../common/types/dialog\";\r\nimport {\r\n    ButtonClose,\r\n    ButtonDelete,\r\n    ButtonPrimary,\r\n    Dialog,\r\n    DialogBody,\r\n    DialogContent,\r\n    DialogFooter,\r\n    DialogHeader,\r\n    Input\r\n} from \"./styled\";\r\n\r\nconst DialogEditView: React.FC<IDialogEdit> = (props) => {\r\n    const { open, register, errors, handleSubmit, onSubmit, onClose, title, deleteThisNote } = props;\r\n    const isErrors = errors.title?.type === \"required\";\r\n    return (\r\n        <>\r\n            {open && (\r\n                <Dialog role=\"dialog\">\r\n                    <DialogContent>\r\n                        <DialogHeader>\r\n                            <h3>Edit title</h3>\r\n                            <ButtonClose onClick={onClose}>\r\n                                <p>+</p>\r\n                            </ButtonClose>\r\n                        </DialogHeader>\r\n                        <DialogBody>\r\n                            <form onSubmit={handleSubmit(onSubmit)} id=\"editNote\">\r\n                                <Input\r\n                                    {\r\n                                    ...register(\"title\",\r\n                                        { required: true })\r\n                                    }\r\n                                    defaultValue={title}\r\n                                    placeholder=\"Tab name\"\r\n                                    data-testid=\"dialog-edit-title\"\r\n                                />\r\n                                {isErrors && <span>Tab name is required</span>}\r\n                            </form>\r\n                        </DialogBody>\r\n                        <DialogFooter>\r\n                            <ButtonDelete onClick={deleteThisNote}>Delete</ButtonDelete>\r\n                            <ButtonPrimary form=\"editNote\" data-testid=\"dialog-edit-save\">Save</ButtonPrimary>\r\n                        </DialogFooter>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DialogEditView;","import { XnoteContext } from \"common/context/XnoteContext\";\r\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\r\nimport React, { useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IDialogTitle, INoteFields } from \"../common/types/dialog\";\r\nimport DialogEditView from \"./DialogEditView\";\r\n\r\nconst DialogEdit: React.FC = () => {\r\n    const { isOpenDialogEdit, setIsOpenDialogEdit, noteEditDefaultValue, setNoteContent } = useContext(XnoteContext);\r\n    const { id_note, title } = noteEditDefaultValue;\r\n    const { register, formState: { errors }, handleSubmit, reset } = useForm<INoteFields>();\r\n    const [, setStorage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\r\n\r\n    const onClose = () => {\r\n        setIsOpenDialogEdit(prevState => !prevState);\r\n        reset();\r\n    };\r\n\r\n    const onSubmit = (data: IDialogTitle) => {\r\n        const storage: INoteFields[] = JSON.parse(localStorage.getItem(\"xnote\")!);\r\n        const { title } = data;\r\n        const filterIdNote = (note: INoteFields) => note.id_note === id_note;\r\n        const [note] = storage.filter(filterIdNote);\r\n        const indexNote = storage.findIndex(filterIdNote);\r\n        note.title = title;\r\n        storage.splice(indexNote, 1, note);\r\n\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            setStorage(storage);\r\n            setNoteContent(storage);\r\n        })\r\n        onClose();\r\n        toast(\"Edited note\");\r\n    };\r\n\r\n    const deleteThisNote = () => {\r\n        const storage: INoteFields[] = JSON.parse(localStorage.getItem(\"xnote\")!);        \r\n        const filterIdNote = (note: INoteFields) => note.id_note === id_note;\r\n        const indexNote = storage.findIndex(filterIdNote);\r\n        storage.splice(indexNote, 1);\r\n        \r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            setStorage(storage);\r\n            setNoteContent(storage);\r\n        })\r\n        onClose();\r\n        toast(\"Delete note\");\r\n    };\r\n\r\n    return (\r\n        <DialogEditView\r\n            {...{ register, errors, handleSubmit, onSubmit, onClose, title, deleteThisNote }}\r\n            open={isOpenDialogEdit}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DialogEdit;","import styled from \"styled-components\";\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n    resize: none;    \r\n    width: 95%;\r\n    margin-top: 1rem;\r\n    padding-right: 1rem;\r\n    background-color: transparent;\r\n    height: 75vh;\r\n    color: white;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    border: 0;\r\n    font-family: 'Lexend', sans-serif;\r\n    color: #cfcfcf;\r\n\r\n    @media (max-width: 800px) {\r\n        width: 87%;\r\n    }\r\n`","import React from \"react\";\r\nimport { TextAreaStyled } from \"./styled\";\r\nimport { ITextArea } from \"./types/types.component\";\r\n\r\nconst TextAreaView: React.FC<ITextArea> = ({ dataId, defaultValue, onChange, ...rest }) => {\r\n    return (\r\n        <TextAreaStyled\r\n            className=\"custom-scroll\"\r\n            data-id={dataId}\r\n            autoFocus={true}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            placeholder=\"Add content\"\r\n            {...rest}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextAreaView;","import React from \"react\";\r\nimport TextAreaView from \"./TextAreaView\";\r\nimport { ITextArea } from \"./types/types.component\";\r\n\r\nconst TextArea: React.FC<ITextArea> = ({ dataId, defaultValue, onChange, ...rest }) => {\r\n    return <TextAreaView {...{ dataId, defaultValue, onChange, ...rest }}/>\r\n}\r\n\r\nexport default TextArea;","import { Tab, TabList } from \"react-tabs\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const TabListStyled = styled(TabList)`\r\n    .tab-area {\r\n        display: flex;\r\n        list-style: none;    \r\n        overflow: auto;\r\n        align-items: center;\r\n    }    \r\n`\r\n\r\nexport const TabStyled = styled(Tab)`\r\n    font-size: 0.8rem;\r\n    background-color: black !important;\r\n    color: white !important;\r\n    padding: 0.55rem 1.5rem;\r\n    border-radius: 0.5rem !important;\r\n    cursor: pointer;\r\n    border: 0.1rem solid transparent !important;\r\n    font-weight: bold;\r\n    animation: all 0.3s;\r\n    color: #cfcfcf !important;\r\n    white-space: nowrap;\r\n\r\n    &.react-tabs__tab--selected {\r\n        border: 0.1rem solid #CD00FE !important;\r\n    }\r\n`\r\n\r\nexport const ButtonPlus = styled.button`\r\n    font-size: 1.5rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: #CD00FE;     \r\n    padding: 0.2rem 0.8rem;\r\n    margin-right: 1rem;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: white;\r\n\r\n    :hover {\r\n        border-color: #CD00FE; \r\n        background-color: black;\r\n    }\r\n    :active {\r\n        color: white;\r\n    }\r\n`","import TextArea from \"components/TextArea\";\r\nimport React from \"react\";\r\nimport { TabPanel, Tabs } from \"react-tabs\";\r\nimport { INoteFields } from \"../common/types/dialog\";\r\nimport { ButtonPlus, TabListStyled, TabStyled } from \"./styled\";\r\nimport { ITabs } from \"./types/types.component\";\r\n\r\nconst TabsView: React.FC<ITabs> = (props) => {\r\n    const { \r\n        storage,\r\n        openDialogCreate,\r\n        openDialogEdit,\r\n        handleContent,\r\n        onSelect,\r\n        lastSelectedTab\r\n    } = props;\r\n    return (\r\n        <Tabs onSelect={onSelect} defaultIndex={lastSelectedTab}>\r\n            <TabListStyled>\r\n                <div className=\"tab-area custom-scroll\">\r\n                    <ButtonPlus onClick={openDialogCreate} data-testid=\"button-open-dialog-create\">+</ButtonPlus>\r\n                    {\r\n                        !!storage.length ?\r\n                            (\r\n                                storage.map((note: INoteFields) => {\r\n                                    return (\r\n                                        <TabStyled\r\n                                            key={note.id_note}\r\n                                            data-id={note.id_note}\r\n                                            title=\"Double click select options\"\r\n                                            onDoubleClick={() => openDialogEdit(note.id_note, note.title)}\r\n                                        >\r\n                                            {note.title}\r\n                                        </TabStyled>\r\n                                    )\r\n                                })\r\n                            ) : \"Add new note\"\r\n                    }\r\n                </div>\r\n            </TabListStyled>\r\n            {\r\n                storage &&\r\n                (\r\n                    storage.map((note: INoteFields) => {\r\n                        return (\r\n                            <TabPanel key={note.id_note}>\r\n                                <TextArea\r\n                                    dataId={`${note.id_note}`}\r\n                                    defaultValue={note.content}\r\n                                    onChange={handleContent}\r\n                                />\r\n                            </TabPanel>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default TabsView;","import { XnoteContext } from \"common/context/XnoteContext\";\r\nimport useLocalStorage from \"common/hooks/useLocalStorage\";\r\nimport React, { ChangeEvent, memo, useCallback, useContext } from \"react\";\r\nimport { INoteFields } from \"../common/types/dialog\";\r\nimport TabsView from \"./TabsView\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Tabs: React.FC = () => {\r\n    const { setIsOpenDialogCreate, setIsOpenDialogEdit, setNoteEditDefaultValue, noteContent, setNoteContent } = useContext(XnoteContext);    \r\n    const [lastSelectedTab, setLastSelectedTab] = useLocalStorage<number>(\"xnote_tab\", 0);\r\n    const [, setStorage] = useLocalStorage<INoteFields[]>(\"xnote\", \"[]\");\r\n\r\n    const openDialogCreate = () => {\r\n        setIsOpenDialogCreate(prevState => !prevState);\r\n    }\r\n\r\n    const openDialogEdit = useCallback((id_note: string, title: string) => {\r\n        setNoteEditDefaultValue({ id_note, title });\r\n        setIsOpenDialogEdit(prevState => !prevState);\r\n    }, [setIsOpenDialogEdit, setNoteEditDefaultValue])\r\n\r\n    const handleContent = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const storage = JSON.parse(localStorage.getItem(\"xnote\")!);\r\n        const { value } = e.target;\r\n        const { id } = e.target.dataset;\r\n\r\n        const callBackNote = (note: INoteFields) => note.id_note === id;\r\n        const [note] = storage.filter(callBackNote);\r\n        const indexNote = storage.findIndex(callBackNote);\r\n\r\n        note.content = value;\r\n        storage.splice(indexNote, 1, note);\r\n\r\n        ReactDOM.unstable_batchedUpdates(() => {\r\n            setStorage(storage);\r\n            setTimeout(() => setNoteContent(storage), 500);\r\n        })        \r\n    }\r\n\r\n    const onSelect = (index: number) => setLastSelectedTab(index);\r\n\r\n    return <TabsView storage={noteContent}{... { openDialogCreate, openDialogEdit, handleContent, onSelect, lastSelectedTab }} />\r\n}\r\n\r\nexport default memo(Tabs);","import Container from \"components/Container\";\r\nimport DialogCreate from \"pages/xnote/DialogCreate\";\r\nimport React from \"react\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport DialogAbout from \"./DialogAbout\";\r\nimport DialogEdit from \"./DialogEdit\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nconst xnoteView: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Tabs />\r\n            <DialogCreate />\r\n            <DialogEdit />\r\n            <DialogAbout />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default xnoteView;","import React from \"react\";\r\nimport XnoteView from \"./xnoteView\";\r\n\r\nconst Xnote: React.FC = () => {    \r\n    return <XnoteView />\r\n}\r\n\r\nexport default Xnote;","import Xnote from \"pages/xnote\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nconst Router:React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Xnote} />\r\n\r\n                {/* Config githubpages */}\r\n                <Route path=\"/xnote\" component={Xnote} />\r\n                <Route path=\"*\">\r\n                    <Redirect to=\"/xnote\" />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import { XnoteProvider } from \"common/context/XnoteContext\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Router from \"./router\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToastContainer theme=\"dark\" autoClose={1500}/>\r\n    <XnoteProvider>\r\n      <Router />\r\n    </XnoteProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}