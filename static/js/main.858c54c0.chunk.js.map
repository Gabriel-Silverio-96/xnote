{"version":3,"sources":["Components/PageStrecture/styled.ts","Components/PageStrecture/index.tsx","Components/Toast/styled.ts","Components/Toast/index.tsx","Components/Modal/styled.ts","assets/logo-xnote.svg","assets/icon/icon-github.svg","assets/background-modal.png","Components/Modal/index.tsx","Components/TextArea/styled.ts","Components/TextArea/index.tsx","Components/InputTabName/styled.ts","Components/InputTabName/index.tsx","Components/Footer/styled.ts","Components/Footer/index.tsx","Pages/Index/styled.ts","Pages/Index/index.tsx","router.tsx","index.tsx"],"names":["Container","styled","main","PageStrecture","children","showToast","keyframes","ToastContainer","div","Toast","message","ModalContainer","ModalContent","props","backgroundModal","ModalHeader","ButtonClose","button","ModalFooter","LogoFooter","Modal","onClick","className","src","Logo","alt","href","target","rel","IconGithub","TextAreaStyled","textarea","TextArea","dataId","defaultValue","onChange","data-id","autoFocus","placeholder","InputArea","ButtonInput","p","InputTabName","onClickClose","onClickDelete","type","name","autoComplete","FooterStyled","footer","NavFooter","ul","Footer","amountNote","onClickAbout","disabled","TabListStyled","TabList","TabStyled","Tab","ButtonPlus","Index","useState","isInputActive","setIsInputActive","noteStorage","setNoteStorage","idTab","setIdTab","noteContent","setNoteContent","isToastActive","setIsToastActive","toastMessage","setToastMessage","isModalActive","setIsModalActive","id_note","Math","floor","random","title_note","content","xNoteInfo","setXNoteInfo","useEffect","storageGet","JSON","parse","localStorage","getItem","setItem","stringify","toggleInput","e","id","dataset","handleContent","value","filter","index","Number","splice","setTimeout","length","map","onDoubleClick","title","Router","exact","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.858c54c0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.main`\r\n    max-width: 100%;\r\n    margin: auto;\r\n    padding: 1.5rem;\r\n`","import React from 'react';\r\n\r\n//Styled\r\nimport { Container } from './styled';\r\n\r\nconst PageStrecture: React.FC = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                {children}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageStrecture;","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst showToast = keyframes`\r\n  0% {\r\n    right: -8.8rem;\r\n  }\r\n  100% {\r\n    right: 1.2rem;\r\n  }\r\n`\r\n\r\nexport const ToastContainer = styled.div`\r\n    position: absolute;\r\n    background-color: #262626;\r\n    padding: 0.8rem 1.3rem;\r\n    width: min-content;\r\n    width: -moz-min-content;\r\n    z-index: 10;\r\n    right: 1.2rem;\r\n    white-space: nowrap;\r\n    border-radius: 0.5rem;\r\n    animation: ${showToast} 0.5s;    \r\n\r\n    p {\r\n        font-size: 0.8rem;\r\n    }\r\n`\r\n\r\n","import React from \"react\";\r\nimport {ToastContainer} from './styled';\r\n\r\ninterface ToastTypes {\r\n    message: string\r\n}\r\n\r\nconst Toast:React.FC<ToastTypes> = ({message}) => {\r\n    return (\r\n        <ToastContainer>\r\n            <p>{message}</p>\r\n        </ToastContainer>\r\n    )\r\n}\r\n\r\nexport default Toast;","import styled from \"styled-components\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;  \r\n  background-color: rgba(0,0,0,0.4);\r\n`\r\n\r\ninterface ModalTypes {\r\n    backgroundModal: string\r\n}\r\n\r\nexport const ModalContent = styled.div<ModalTypes>`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 2rem 3rem;\r\n    max-width: 31.25rem;\r\n    margin: auto;\r\n    background-color: #262626;\r\n    border-radius: 1.25rem;\r\n    background-image: url(${props => props.backgroundModal});\r\n    background-repeat: no-repeat;\r\n\r\n    h1 {\r\n        color: white;\r\n        font-size: 2.5rem;\r\n        margin-top: 3rem;\r\n        margin-bottom: 3rem;\r\n    }\r\n\r\n    ul {\r\n        list-style: decimal;\r\n        padding-left: 1rem;        \r\n\r\n        li {\r\n            margin-bottom: 1rem;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        width: 15.625rem;\r\n    }\r\n`\r\n\r\nexport const ModalHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .logo {\r\n        img {\r\n            width: 4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const ButtonClose = styled.button`\r\n    font-size: 1.5rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: black;     \r\n    padding: 0.2rem 0.8rem;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: white;\r\n\r\n    p {\r\n        transform: rotate(45deg);\r\n    }\r\n`\r\n\r\nexport const ModalFooter = styled.div`\r\n    margin-top: 5rem;\r\n\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        p {\r\n            margin-left: 0.5rem;\r\n            color: white;\r\n            text-decoration: none;\r\n        }\r\n    }\r\n`\r\n\r\nexport const LogoFooter = styled.div`\r\n    img {\r\n        width: 1.5rem;\r\n        background-color: white;\r\n        padding: 0.5rem;\r\n        border-radius: 50%;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/logo-xnote.6c00d0c4.svg\";","export default __webpack_public_path__ + \"static/media/icon-github.f69e45e4.svg\";","export default __webpack_public_path__ + \"static/media/background-modal.026006b8.png\";","import React from \"react\";\r\n\r\nimport { ModalContainer, ModalHeader, ModalContent, ButtonClose, ModalFooter, LogoFooter } from './styled';\r\nimport Logo from 'assets/logo-xnote.svg';\r\nimport IconGithub from 'assets/icon/icon-github.svg';\r\nimport backgroundModal from 'assets/background-modal.png';\r\n\r\ninterface ModalTypes {\r\n    onClick: () => void;\r\n}\r\n\r\nconst Modal: React.FC<ModalTypes> = ({onClick}) => {   \r\n    return (\r\n        <ModalContainer>\r\n            <ModalContent backgroundModal={backgroundModal}>\r\n                <ModalHeader>\r\n                    <div className=\"logo\">\r\n                        <img src={Logo} alt=\"Logo Xnote\" />\r\n                    </div>\r\n                    <div>\r\n                        <ButtonClose onClick={onClick}>\r\n                            <p>+</p>\r\n                        </ButtonClose>\r\n                    </div>\r\n                </ModalHeader>\r\n                <h1>\r\n                    Create new notes is very simple\r\n                </h1>\r\n                <ul>\r\n                    <li>Click in button plus, to create new note</li>\r\n                    <li>To edit name tab or delete note, double click in tab</li>\r\n                </ul>\r\n                <ModalFooter>\r\n                    <a href=\"https://github.com/Gabriel-Silverio-96/xnote\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <LogoFooter>\r\n                            <img src={IconGithub} alt=\"Icon Github\" />\r\n                        </LogoFooter>\r\n                        <p>Respository</p>\r\n                    </a>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </ModalContainer>\r\n    )\r\n}\r\n\r\nexport default Modal;","import styled from \"styled-components\";\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n    resize: none;    \r\n    width: 95%;\r\n    margin-top: 1rem;\r\n    padding-right: 1rem;\r\n    background-color: transparent;\r\n    height: 100vh;\r\n    color: white;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    border: 0;\r\n    font-family: 'Lexend', sans-serif;\r\n    color: #cfcfcf;\r\n\r\n    @media (max-width: 800px) {\r\n        width: 87%;\r\n    }\r\n`","import React from 'react';\r\nimport { TextAreaStyled } from './styled';\r\n\r\ninterface TextAreaTypes {\r\n    dataId: string;\r\n    defaultValue: string;\r\n    onChange: (object: object) => void;\r\n}\r\n\r\nconst TextArea: React.FC<TextAreaTypes> = ({ dataId, defaultValue, onChange}) => {\r\n    return (\r\n        <TextAreaStyled\r\n            className=\"custom-scroll\"\r\n            data-id={dataId}\r\n            autoFocus={true}\r\n            defaultValue={defaultValue}\r\n            onChange={onChange}\r\n            placeholder=\"Add content\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextArea;","import styled from \"styled-components\";\r\n\r\nexport const InputArea = styled.div`\r\n    position: absolute;\r\n    top: 5rem;\r\n    left: 0;\r\n    right: 0;\r\n    width: 15rem;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: black;\r\n    padding: 1.5rem;\r\n    border-radius: 0.5rem;\r\n    border: 0.1rem solid #CD00FE;\r\n\r\n    input {\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 0.5rem !important;\r\n        background-color: #262626;\r\n        border: 0;\r\n        color: white;\r\n    }    \r\n\r\n    div {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        right: inherit;\r\n        width: auto;\r\n    }\r\n`\r\nexport const ButtonInput = styled.p`\r\n    margin-top: 0.5rem;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    font-size: 0.7rem;\r\n`","import React from 'react';\r\nimport { InputArea, ButtonInput } from './styled';\r\n\r\ninterface InputTabNameTypes {\r\n    onChange: (object: object) => void;\r\n    onClickClose: (object: object) => void;\r\n    onClickDelete: (object: object) => void;\r\n}\r\n\r\nconst InputTabName:React.FC<InputTabNameTypes> = ({ onChange, onClickClose, onClickDelete}) => {\r\n    return (\r\n        <InputArea>            \r\n            <input type=\"text\" name=\"nameTab\" \r\n                placeholder=\"Tab name\"\r\n                autoComplete=\"off\"\r\n                autoFocus={true}\r\n                onChange={onChange}\r\n            />\r\n            <div>\r\n                <ButtonInput onClick={onClickDelete}>Delete note</ButtonInput>\r\n                <ButtonInput onClick={onClickClose}>Close</ButtonInput>\r\n            </div>\r\n        </InputArea>\r\n    );\r\n}\r\n\r\nexport default InputTabName;\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterStyled = styled.footer`\r\n    width: -webkit-fill-available;\r\n    padding: 0.5rem 1rem 0;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    align-content: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    \r\n    border: 0.1rem solid #121212;\r\n    border-left: 0;\r\n    border-bottom: 0;\r\n    border-right: 0;\r\n    text-align: right;\r\n    background: #000000;\r\n    width: -moz-available;\r\n    \r\n    div {\r\n        margin-bottom: 1rem;\r\n    }\r\n`\r\n\r\nexport const NavFooter = styled.ul`\r\n    list-style: none;\r\n    font-size: 0.8rem;\r\n    display: flex;\r\n\r\n    li{\r\n        cursor: pointer;\r\n        &:first-child {\r\n            margin-right: 1rem;\r\n        }\r\n\r\n        button {\r\n            background-color: black;\r\n            cursor: pointer;\r\n            border: 0;\r\n            color: #cfcfcf;\r\n\r\n            &:disabled {\r\n                color: #282525;\r\n                cursor: not-allowed;\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react';\r\n\r\nimport { FooterStyled, NavFooter } from './styled';\r\n\r\ninterface FooterTypes {\r\n    onClick: () => void;\r\n    amountNote: number;\r\n    onClickAbout: () => void;\r\n}\r\n\r\nconst Footer: React.FC<FooterTypes> = ({onClick, amountNote, onClickAbout}) => {\r\n    return (\r\n        <FooterStyled>\r\n            <div>\r\n                <NavFooter>\r\n                    <li>\r\n                        <button onClick={onClick} disabled={amountNote > 1 ? false : true}>Detele all</button>\r\n                    </li>\r\n                </NavFooter>\r\n            </div>\r\n            <div>\r\n                <NavFooter>\r\n                    <li onClick={onClickAbout}>About</li>\r\n                </NavFooter>\r\n            </div>\r\n        </FooterStyled>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { Tab, TabList } from \"react-tabs\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const TabListStyled = styled(TabList)`\r\n    .tab-area {\r\n        display: flex;\r\n        list-style: none;    \r\n        overflow: auto;\r\n        align-items: center;\r\n    }    \r\n`\r\n\r\nexport const TabStyled = styled(Tab)`\r\n    font-size: 0.8rem;\r\n    background-color: black !important;\r\n    color: white !important;\r\n    padding: 0.5rem 1.5rem;\r\n    border-radius: 0.5rem !important;\r\n    cursor: pointer;\r\n    border: 0.1rem solid transparent !important;\r\n    font-weight: bold;\r\n    animation: all 0.3s;\r\n    color: #cfcfcf !important;\r\n    white-space: nowrap;\r\n\r\n    &.react-tabs__tab--selected {\r\n        border: 0.1rem solid #CD00FE !important;\r\n    }\r\n`\r\n\r\nexport const ButtonPlus = styled.button`\r\n    font-size: 1.5rem;\r\n    border: 0.1rem solid transparent;    \r\n    background-color: #CD00FE;     \r\n    padding: 0.2rem 0.8rem;\r\n    margin-right: 1rem;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    animation: all 0.3s;\r\n    color: white;\r\n\r\n    :hover {\r\n        border-color: #CD00FE; \r\n        background-color: black;\r\n    }\r\n    :active {\r\n        color: white;\r\n    }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { Tabs, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\n//Components\r\nimport PageStrecture from 'Components/PageStrecture';\r\nimport Toast from 'Components/Toast';\r\nimport Modal from 'Components/Modal';\r\nimport TextArea from 'Components/TextArea';\r\nimport InputTabName from 'Components/InputTabName';\r\nimport Footer from 'Components/Footer';\r\n\r\n//Styled\r\nimport { TabListStyled, TabStyled, ButtonPlus } from './styled';\r\n\r\ninterface xNoteInfoTypes {\r\n    id_note: number;\r\n    title_note: string;\r\n    content: string;\r\n}\r\n\r\nconst Index: React.FC = () => {\r\n    const [isInputActive, setIsInputActive] = useState(false);\r\n    const [noteStorage, setNoteStorage] = useState<xNoteInfoTypes[]>([]);\r\n    const [idTab, setIdTab] = useState(\"\");\r\n    const [noteContent, setNoteContent] = useState(\"\");\r\n\r\n    const [isToastActive, setIsToastActive] = useState(false);\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n    const [isModalActive, setIsModalActive] = useState(false);\r\n\r\n    const [xNoteInfo, setXNoteInfo] = useState<xNoteInfoTypes>({\r\n        id_note: Math.floor(Math.random() * 1000),\r\n        title_note: \"New note\",\r\n        content: \"\"\r\n    })\r\n\r\n    const newTab = () => {\r\n        setXNoteInfo(\r\n            {\r\n                id_note: Math.floor(Math.random() * 1000),\r\n                title_note: \"New note\",\r\n                content: \"\"\r\n            }\r\n        )\r\n        const storageGet: any = JSON.parse(localStorage.getItem('xNoteInfo')!);\r\n        localStorage.setItem('xNoteInfo', JSON.stringify([...storageGet, xNoteInfo]));\r\n        setNoteStorage(storageGet);\r\n\r\n        setToastMessage(\"Created new note\");\r\n        setIsToastActive(true);\r\n        setTimeout(() => {\r\n            setIsToastActive(false);\r\n        }, 2500);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const storageGet: any = JSON.parse(localStorage.getItem('xNoteInfo')!);\r\n        if (storageGet === null) {\r\n            localStorage.setItem('xNoteInfo', JSON.stringify([]));\r\n        }\r\n\r\n        setNoteStorage(storageGet);\r\n\r\n    }, [xNoteInfo, noteContent]);\r\n\r\n    const toggleInput = (e: any) => {\r\n        const id = e.target.dataset.id;\r\n        setIsInputActive(!isInputActive);\r\n        setIdTab(id)\r\n    }\r\n\r\n    const handleTitleName = (e: any) => {\r\n        let value = e.target.value;\r\n        if (value === \"\") {\r\n            value = \"Add note name\"\r\n        }\r\n\r\n        noteStorage.filter((xNoteInfo: xNoteInfoTypes, index) => {\r\n            if (xNoteInfo.id_note === Number(idTab)) {\r\n                xNoteInfo.title_note = value;\r\n                const storageGet: any = JSON.parse(localStorage.getItem('xNoteInfo')!);\r\n                storageGet.splice(index, 1, xNoteInfo);\r\n\r\n                localStorage.setItem('xNoteInfo', JSON.stringify(storageGet));\r\n            }\r\n            return true\r\n        })\r\n    }\r\n\r\n    const handleContent = (e: any) => {\r\n        const value = e.target.value;\r\n        const id = e.target.dataset.id;\r\n\r\n        noteStorage.filter((xNoteInfo: xNoteInfoTypes, index) => {\r\n            if (xNoteInfo.id_note === Number(id)) {\r\n                xNoteInfo.content = value;\r\n                setNoteContent(value)\r\n\r\n                const storageGet: any = JSON.parse(localStorage.getItem('xNoteInfo')!);\r\n                storageGet.splice(index, 1, xNoteInfo)\r\n\r\n                localStorage.setItem('xNoteInfo', JSON.stringify(storageGet));\r\n            }\r\n            return true\r\n        })\r\n    }\r\n\r\n    const deleteNote = (e: any) => {\r\n        noteStorage.filter((xNoteInfo: xNoteInfoTypes, index) => {\r\n            if (xNoteInfo.id_note === Number(idTab)) {\r\n                const storageGet: any = JSON.parse(localStorage.getItem('xNoteInfo')!);\r\n\r\n                storageGet.splice(index, 1)\r\n\r\n                localStorage.setItem('xNoteInfo', JSON.stringify(storageGet));\r\n                setNoteContent(storageGet);\r\n                setIsInputActive(false);\r\n\r\n                setToastMessage(\"Note deleted\");\r\n                setIsToastActive(true);\r\n                setTimeout(() => {\r\n                    setIsToastActive(false);\r\n                }, 2500);\r\n            }\r\n            return true\r\n        })\r\n    }\r\n\r\n    const deleteAllNote = () => {\r\n        localStorage.setItem('xNoteInfo', '[]');\r\n        setNoteStorage([]);\r\n        setIsInputActive(false);\r\n\r\n        setToastMessage(\"All notes deleted\");\r\n        setIsToastActive(true);\r\n        setTimeout(() => {\r\n            setIsToastActive(false);\r\n        }, 2500);\r\n    }\r\n\r\n    const showAbout = () => {\r\n        setIsModalActive(true)\r\n    }\r\n\r\n    const hideAbout = () => {\r\n        setIsModalActive(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageStrecture>\r\n                {isToastActive && (\r\n                    <Toast\r\n                        message={toastMessage}\r\n                    />\r\n                )}\r\n\r\n                {isModalActive && (\r\n                    <Modal \r\n                        onClick={hideAbout}\r\n                    />\r\n                )}\r\n\r\n                <Tabs>\r\n                    <TabListStyled>\r\n                        <div className=\"tab-area custom-scroll\">\r\n                            <ButtonPlus onClick={newTab}>+</ButtonPlus>\r\n                            {\r\n                                noteStorage !== null && noteStorage.length > 0 ?\r\n                                    (\r\n                                        noteStorage.map((xNoteInfo: xNoteInfoTypes) => {\r\n                                            return (\r\n                                                <TabStyled\r\n                                                    key={xNoteInfo.id_note}\r\n                                                    data-id={xNoteInfo.id_note}\r\n                                                    onDoubleClick={toggleInput}\r\n                                                    title=\"Double click select options\">\r\n                                                    {xNoteInfo.title_note}\r\n                                                </TabStyled>\r\n                                            )\r\n                                        })\r\n                                    ) : \"Add new note\"\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            isInputActive && (\r\n                                <InputTabName\r\n                                    onClickClose={toggleInput}\r\n                                    onClickDelete={deleteNote}\r\n                                    onChange={handleTitleName}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                    </TabListStyled>\r\n                    {\r\n                        noteStorage !== null ?\r\n                            (\r\n                                noteStorage.map((xNoteInfo: xNoteInfoTypes) => {\r\n                                    return (\r\n                                        <TabPanel key={xNoteInfo.id_note}>\r\n                                            <TextArea\r\n                                                dataId={`${xNoteInfo.id_note}`}\r\n                                                defaultValue={xNoteInfo.content}\r\n                                                onChange={handleContent}\r\n                                            />\r\n                                        </TabPanel>\r\n                                    )\r\n                                })\r\n                            ) : \"\"\r\n                    }\r\n                </Tabs>\r\n            </PageStrecture>\r\n            <Footer\r\n                onClick={deleteAllNote}\r\n                amountNote={noteStorage === null ? 0 : noteStorage.length+1}\r\n                onClickAbout={showAbout}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n//Pages\r\nimport Index from 'Pages/Index';\r\n\r\nconst Router:React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Index} />\r\n\r\n                {/* Config githubpages */}\r\n                <Route path=\"/xnote\" component={Index} />\r\n                <Route path=\"*\">\r\n                    <Redirect to=\"/xnote\" />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Router from './router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}